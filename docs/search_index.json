[["api-users-guide.html", "18 API Users Guide 18.1 ACCEPT API 18.2 BODE API 18.3 EPIC API 18.4 FEV1 API 18.5 CVDAnderson API 18.6 CHDWilson API 18.7 CFMortality API 18.8 QRISK3 API 18.9 CODEXCOPD API 18.10 MMRCEA API 18.11 COVIDSEIR API (experimental) 18.12 PLCOM2012 API 18.13 ADO API 18.14 DOSE API 18.15 ISARIC4C API", " 18 API Users Guide 18.1 ACCEPT API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patients provided in the accept package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;accept&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Python import json import requests url = &#39;https://prism.peermodelsnetwork.com/route/accept/run&#39; headers = {&#39;x-prism-auth-user&#39;: YOUR_API_KEY} model_run = requests.post(url, headers=headers, json = {&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;ID&quot;: &quot;10001&quot;,&quot;male&quot;: 1,&quot;age&quot;: 57,&quot;smoker&quot;: 0,&quot;oxygen&quot;: 0,&quot;statin&quot;: 0,&quot;LAMA&quot;: 1,&quot;LABA&quot;: 1,&quot;ICS&quot;: 1,&quot;FEV1&quot;: 51,&quot;BMI&quot;: 18,&quot;SGRQ&quot;: 63,&quot;LastYrExacCount&quot;: 2,&quot;LastYrSevExacCount&quot;: 1,&quot;randomized_azithromycin&quot;: 0,&quot;randomized_statin&quot;: 0,&quot;randomized_LAMA&quot;: 0,&quot;randomized_LABA&quot;: 0,&quot;randomized_ICS&quot;: 0, &quot;random_sampling_N&quot; : 1000, &quot;random_distribution_iteration&quot; : 20000, &quot;calculate_CIs&quot; : &quot;TRUE&quot;}]}) print(model_run) results = json.loads(model_run.text) print(results) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;ID&quot;: &quot;10001&quot;,&quot;male&quot;: 1,&quot;age&quot;: 57,&quot;smoker&quot;: 0,&quot;oxygen&quot;: 0,&quot;statin&quot;: 0,&quot;LAMA&quot;: 1,&quot;LABA&quot;: 1,&quot;ICS&quot;: 1,&quot;FEV1&quot;: 51,&quot;BMI&quot;: 18,&quot;SGRQ&quot;: 63,&quot;LastYrExacCount&quot;: 2,&quot;LastYrSevExacCount&quot;: 1,&quot;randomized_azithromycin&quot;: 0,&quot;randomized_statin&quot;: 0,&quot;randomized_LAMA&quot;: 0,&quot;randomized_LABA&quot;: 0,&quot;randomized_ICS&quot;: 0, &quot;random_sampling_N&quot; : 1000, &quot;random_distribution_iteration&quot; : 20000, &quot;calculate_CIs&quot; : &quot;TRUE&quot;}]}&#39; \\ https://prism.peermodelsnetwork.com/route/accept/run 18.2 BODE API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the bode package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;bode&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;FEV1&quot;: 40,&quot;mMRC&quot;: 3,&quot;BMI&quot;: 22,&quot;walk&quot;: 100}]}&#39; \\ https://prism.peermodelsnetwork.com/route/bode/run 18.3 EPIC API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the epicR package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;epic&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) 18.4 FEV1 API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the fev1 package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;fev1&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;male&quot;:1,&quot;age&quot;:70,&quot;smoker&quot;:1,&quot;FEV1&quot;:2.5,&quot;height&quot;:1.68,&quot;weight&quot;:65}]}&#39; \\ https://prism.peermodelsnetwork.com/route/fev1/run 18.5 CVDAnderson API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the cvdanderson package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;cvdanderson&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;age&quot;: 33,&quot;gender&quot;: 1,&quot;Tchol&quot;: 230,&quot;ECG_LVH&quot;: 0,&quot;HDLchol&quot;: 48, &quot;SBP&quot;: 135, &quot;DBP&quot;: 88, &quot;diabetes&quot;: 1, &quot;smoker&quot;: 1, &quot;t&quot;: 10}]}&#39; \\ https://prism.peermodelsnetwork.com/route/cvdanderson/run 18.6 CHDWilson API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the chdwilson package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;chdwilson&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;age&quot;: 55,&quot;gender&quot;: 1,&quot;TChol&quot;: 250,&quot;LDL&quot;: 120,&quot;HDL&quot;: 39, &quot;SBP&quot;: 146, &quot;DBP&quot;: 88, &quot;diabetes&quot;: 0, &quot;smoker&quot;: 1}]}&#39; \\ https://prism.peermodelsnetwork.com/route/chdwilson/run 18.7 CFMortality API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the chdwilson package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;cfmortality&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;male&quot;: 0,&quot;age&quot;: 57,&quot;fvc&quot;: 66.7,&quot;fev1&quot;: 47.4,&quot;fev1LastYear&quot;: 80.5,&quot;bcepacia&quot;: 0,&quot;underweight&quot;: 0,&quot;nHosp&quot;: 0,&quot;pancreaticInsufficient&quot;: 1,&quot;CFRelatedDiabetes&quot;: 0,&quot;ageAtDiagnosis&quot;: 0.9}]}&#39; \\ https://prism.peermodelsnetwork.com/route/cfmortality/run 18.8 QRISK3 API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the QRISK3 package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;qrisk3&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) 18.9 CODEXCOPD API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the codexcopd package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;codexcopd&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;age&quot;:40,&quot;charlson&quot;:8,&quot;FEV1&quot;:40,&quot;mMRC&quot;:3,&quot;exacerbation&quot;:2}]}&#39; \\ https://prism.peermodelsnetwork.com/route/codexcopd/run 18.10 MMRCEA API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example inputs provided by the modelling team: library(peermodels) input &lt;- get_default_input(&quot;mmrcea&quot;, api_key = YOUR_API_KEY) input$timeHorizon &lt;- 5 input$discountRate &lt;- 0.015 input$averageFamilyReferred &lt;- 2 input$familyReferredHCP &lt;- 1 input$adherenceIntensiveScreening &lt;- 0.9 input$crcmmrDefReferredHCPIntArm &lt;- 0.3 input$crcmmrDefReferredHCPmmrbrafCompArmVCHA &lt;- 0.3 input$crcmmrDefReferredHCPmmrCompArmVCHA &lt;- 0.08 input$crcmmrDefReferredHCPmmrbrafCompArmVIHA &lt;- 0.08 input$crcmmrDefReferredHCPmmrCompArmOtherHA &lt;- 0.08 input$ecmmrDefReferredHCPIntArm &lt;- 0.8 model_run(input) 18.11 COVIDSEIR API (experimental) We have recently deployed the Bayesian SEIR model to estimate physical-distancing effects developed by Anderson et al to our cloud infrastructure. The current version of the R package deployed to the PRISM server is covidseir v0.0.0.9006. The current implementation of the covidseir package is experimental and has some limitations, given the computational intensity of the model. Depending on the number of chains and iterations, the html connection might be dropped for calls that more than a dozen minutes. Currently, fitting the model with default parameters takes about 5 minutes. We are actively working to implement asynchronous support which would email the results back to the user when hours long model runs are requested. Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the covidseir package: library(peermodels) input &lt;- get_default_input(&quot;covidseir&quot;, api_key = YOUR_API_KEY, bypass_router = T) names(input) input$daily_cases results &lt;- model_run(input) names(results) draw_plots() The same workflow can be used to fit and run the model based on custom data. For example, the code snippet below, automatically downloads latest COVID-19 case numbers for British Columbia, and reruns the simulation using different assumptions. library(stringr) library(dplyr) library(tidyr) library(readr) library(lubridate) library(peermodels) url &lt;- &quot;https://docs.google.com/spreadsheets/d/1ad7-09_Jn6AxsdkVPE33T-iLfGpPRmd3piXQqFiVeas/export?&amp;format=csv&quot; CanadaCases &lt;- read_csv(url) covidCases &lt;- CanadaCases %&gt;% rename (name = &quot;prname&quot;) %&gt;% rename (Cases = &quot;numconf&quot;) %&gt;% mutate(date=dmy(date)) %&gt;% filter (name!=&quot;Canada&quot;) %&gt;% filter (date!=today()) bcCases &lt;- covidCases %&gt;% filter (name == &quot;British Columbia&quot;) connect_to_model(&quot;covidseir&quot;, api_key = &quot;YDbxcnNHmf4XoteSmCFHKx&quot;, bypass_router = T) input &lt;- get_default_input() first &lt;- length(bcCases$numtoday)-42+1 last &lt;- length(bcCases$numtoday) input$daily_cases &lt;- bcCases$numtoday[first:last] # Example assumed sampling fractions of positive cases: s1 &lt;- c(rep(0.1, 13), rep(0.2, length(input$daily_cases) - 13)) samp_frac_seg &lt;- c(rep(1, 13), rep(2, length(input$daily_cases) - 13)) s2 &lt;- rep(0.07, length(input$daily_cases)) # Assuming 7\\% of positive individuals are hospitalized input$samp_frac_fixed &lt;- rep(0.1, length(input$daily_cases)) input$fit_iter &lt;- 100 input$chains &lt;- 1 input$f_fixed &lt;- rep(0.1, 90) results &lt;- model_run(input) draw_plots() Cloud Access through Python Users can use Python to access covidseir model on the cloud. The simple code snippet below runs the model with default inputs. import json import requests url = &#39;http://model-covidseir.cp.prism-ubc.linaralabs.com/ocpu/library/covidseirPrism/R/gateway/json&#39; headers = {&#39;x-prism-auth-user&#39;: &#39;YOUR_API_KEY&#39;} default_input = requests.post(url, headers=headers,json = {&quot;func&quot;:[&quot;get_default_input&quot;]}) # json_default_input = json.loads(default_input.json()[0]) # OR: json_default_input = json.loads(json.loads(default_input.text)[0]) response = requests.post(url, headers=headers,json = {&quot;func&quot;:[&quot;prism_model_run&quot;], &quot;model_input&quot;:json_default_input}) results = json.loads(response.text) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: YOUR_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:{&quot;daily_cases&quot;:[0,0,1,3,1,8,0,6,5,0,7,7,18,9,22,38,53,45,40,77,76,48,67,78,42,66,67,92,16,70,43,53,55,53,29,26,37,25,45,34,40,35],&quot;obs_model&quot;:[&quot;NB2&quot;,&quot;Poisson&quot;],&quot;fit_forecast_days&quot;:[0],&quot;time_increment&quot;:[0.25],&quot;samp_frac_fixed&quot;:[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2],&quot;samp_frac_type&quot;:[&quot;fixed&quot;,&quot;estimated&quot;,&quot;rw&quot;,&quot;segmented&quot;],&quot;samp_frac_seg&quot;:{},&quot;days_back&quot;:[45],&quot;R0_prior&quot;:[0.9555,0.2],&quot;phi_prior&quot;:[1],&quot;f_prior&quot;:[0.4,0.2],&quot;e_prior&quot;:[0.8,0.05],&quot;samp_frac_prior&quot;:[0.4,0.2],&quot;start_decline_prior&quot;:[2.7081,0.05],&quot;end_decline_prior&quot;:[3.091,0.05],&quot;f_ramp_rate&quot;:[0],&quot;rw_sigma&quot;:[0.1],&quot;seed&quot;:[42],&quot;chains&quot;:[1],&quot;fit_iter&quot;:[100],&quot;N_pop&quot;:[5100000],&quot;pars&quot;:{&quot;D&quot;:[5],&quot;k1&quot;:[0.2],&quot;k2&quot;:[1],&quot;q&quot;:[0.05],&quot;ud&quot;:[0.1],&quot;ur&quot;:[0.02],&quot;f0&quot;:[1]},&quot;i0_prior&quot;:[2.0794,1],&quot;state_0&quot;:{&quot;E1_frac&quot;:[0.4],&quot;E2_frac&quot;:[0.1],&quot;I_frac&quot;:[0.5],&quot;Q_num&quot;:[0],&quot;R_num&quot;:[0],&quot;E1d_frac&quot;:[0.4],&quot;E2d_frac&quot;:[0.1],&quot;Id_frac&quot;:[0.5],&quot;Qd_num&quot;:[0],&quot;Rd_num&quot;:[0]},&quot;save_state_predictions&quot;:[false],&quot;delay_scale&quot;:[9.85],&quot;delay_shape&quot;:[1.73],&quot;ode_control&quot;:[1e-07,1e-06,1000000],&quot;project_forecast_days&quot;:[100],&quot;f_fixed_start&quot;:[53],&quot;f_fixed&quot;:[0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2],&quot;forecast_iter&quot;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],&quot;return_states&quot;:[false],&quot;imported_cases&quot;:[0],&quot;imported_window&quot;:[1],&quot;f_seg&quot;:[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]} } &#39; \\ http://model-covidseir.cp.prism-ubc.linaralabs.com/ocpu/library/covidseirPrism/R/gateway/json 18.12 PLCOM2012 API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the PLCOM2012 package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;PLCOm2012&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;age&quot;=62, &quot;race&quot;=&quot;White&quot;, &quot;education&quot;=4, &quot;bmi&quot;=27, &quot;copd&quot;=0, &quot;cancer_hist&quot;=0, &quot;family_hist_lung_cancer&quot;=0, &quot;smoking_status&quot;=0, &quot;smoking_intensity&quot;=80, &quot;duration_smoking&quot;=27, &quot;smoking_quit_time&quot;=10}]}&#39; \\ https://prism.peermodelsnetwork.com/route/plcom2012/run 18.13 ADO API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the ADO package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;ado&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;fev&quot;:65, &quot;mmrc&quot;:1, &quot;age&quot;:41 }]}&#39; \\ http://model-ado.cp.prism-ubc.linaralabs.com/ocpu/library/adoPrism/R/gateway/json 18.14 DOSE API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the DOSE package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;dose&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;mmrc&quot;:1, &quot;fev&quot;:55, &quot;smoking_status&quot;:1, &quot;exacerbation&quot;:2}]}&#39; \\ http://model-dose.cp.prism-ubc.linaralabs.com/ocpu/library/dosePrism/R/gateway/json 18.15 ISARIC4C API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the ISARIC4C package: remotes::install_github (resplab/peermodels) library(peermodels) input &lt;- get_default_input(&quot;isaric4c&quot;, api_key = YOUR_API_KEY) results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;age&quot;:69, &quot;sex&quot;:1, &quot;num_comorbidities&quot;:1, &quot;respiratory_rate&quot;:25, &quot;admission_oxygen_saturation&quot;: 90, &quot;glasgow_coma_scale&quot;: 10, &quot;urea&quot;: 10, &quot;crp&quot;: 70, &quot;func&quot;: 0}]}&#39; \\ http://model-dose.cp.prism-ubc.linaralabs.com/ocpu/library/isaric4cPrism/R/gateway/json "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
