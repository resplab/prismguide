[
["index.html", "Models on the Peer Models Network 1 Introduction", " Models on the Peer Models Network Amin Adibi, Stephanie Harvard, Mohsen Sadatsafavi 2020-06-28 1 Introduction Peer Models Network is an initiative to make models for healthcare decision-making accessible, transparent and interpretable to all British Columbians. With support from the Canada Foundation for Innovation, BC SUPPORT Unit and BC Academic Health Science Network, the Peer Models Network (PMN) aims to increase engagement between the modelling community and policymakers, interdisciplinary scholars, patients, journalists, and other members of the public. The PMN centres around a software infrastructure called the Programmable Interface for Statistical and Simulation Models (PRISM). PRISM hosts models on the cloud and provides standard Application Programming Interfaces (APIs) that allows users of different levels of technical backgrounds to interact with models hosted on a cloud. Users can submit queries to cloud-hosted models through a multitude of software platforms, including Microsoft Excel, R, Python, bash scripts, Javascript and custom web apps. This enables direct access to users who lack either the software or hardware infrastructure or the technical expertise to set up models on their own devices. It also enables more technical users to integrate modes with other pieces of softwar In its current implementation, PRISM can hosts models that are developed in R, including those that use Cpp and STAN. Synchronous APIs calls are currently implemented and support for asynchronous calls that are required by extra long processing times is under active development. "],
["accept.html", "2 ACCEPT", " 2 ACCEPT Field Value Model Name Acute COPD Exacerbation Prediction Tool (ACCEPT) Modelling Team RESP Publication doi:10.1016/S2213-2600(19)30397-2 Purpose Predict probability, rate, and severity of COPD exacerbations Video The ACCEPT Model in 90 Seconds Interviews Amin Adibi on the ACCEPT Model for COPD: Why and How Media COPD exacerbations: finally, a more than ACCEPTable risk score Web App ACCEPT web App R Package accept Excel Sheet PC Version API User Guide Link "],
["bode.html", "3 BODE", " 3 BODE Field Value Model Name The Body-Mass Index, Airflow Obstruction, Dyspnea, and Exercise Capacity Index Modelling Team Celli et al. Publication 10.1056/NEJMoa021322 Outcome Mortality Risk R Package bode API User Guide Link "],
["cfmortality.html", "4 CFMortality", " 4 CFMortality Field Value Model Name Mortality prediction models in cystic fibrosis Modelling Team Stanojevic et al. Publication 10.1183/13993003.00224-2019 Outcome Mortality Risk Video R Package cfmortality API User Guide Link "],
["chdwilson.html", "5 CHDWilson", " 5 CHDWilson Field Value Model Name Prediction of Coronary Heart Disease Using Risk Factor Categories Modelling Team Wilson et al. Publication 10.1161/01.CIR.97.18.1837 Outcome Coronary Heart Disease Excel Sheet PC Version R Package chdwilson API User Guide Link "],
["codexcopd.html", "6 CODEXCOPD", " 6 CODEXCOPD Field Value Model Name The CODEX (comorbidity, obstruction, dyspnea, and previous severe exacerbations) Index Modelling Team Almagro et al. Publication 10.1378/chest.13-1328 Outcome Survival and readmission at both 3 months and 1 year after hospital discharge for a COPD exacerbation R Package codexcopd API User Guide Link "],
["covidseir.html", "7 COVIDSEIR", " 7 COVIDSEIR Field Value Model Name Bayesian SEIR model to estimate physical-distancing effects Modelling Team Anderson et al. Publication 10.1101/2020.04.17.20070086 Outcome COVID-19 Cases R Package covidseir API User Guide Link "],
["cvdanderson.html", "8 CVDAnderson", " 8 CVDAnderson Field Value Model Name Prediction of Coronary Heart Disease Using Risk Factor Categories Modelling Team Anderson et al. Publication 10.1016/0002-8703(91)90861-B Outcome CHD, MI, CHD Mortality, Stroke, CVD, CVD Mortalitye R Package cvdanderson API User Guide Link "],
["epic.html", "9 EPIC", " 9 EPIC Field Value Model Name Evaluation Platform in COPD (EPIC) Modelling Team RESP Publication doi:10.1177%2F0272989X18824098 Outcome Patient-level outcomes, as well as mortality, prevalence, QALYs, costs, etc. Video The EPIC Model in 2 Minutes Interviews Mohsen Sadatsafavi on the EPIC Model R Package epicR Excel Sheet PC Version API User Guide Link "],
["fev1.html", "10 FEV1", " 10 FEV1 Field Value Model Name Individualized prediction of lung-function decline in COPD Modelling Team RESP Publication doi:10.1503/cmaj.151483 Outcome Lung function over next 11 years Web App FEV1 web App Excel Sheet PC Version R Package fev1 API User Guide Link "],
["mmrcea.html", "11 MMRCEA", " 11 MMRCEA Field Value Model Name Cost-effectiveness evaluation of province-wide universal mismatch repair (MMR) reflex testing for lynch syndrome (LS) in British Columbia Modelling Team Centre for Clinical Epidemiology &amp; Evaluation (C2E2) Outcome Costs, QALYs and life-years for the prevention and management of colorectal and endometrial cancers patients and their families Excel Sheet Pending API User Guide Link "],
["qrisk3.html", "12 QRISK3", " 12 QRISK3 Field Value Model Name 10-Year Cardiovascular Disease Risk Calculator Modelling Team Hippisley-Cox et al. Publication 10.1136/bmj.j2099 Outcome 10-yr risk of heart attack/stroke R Package QRISK3 API User Guide Link "],
["api-users-guide.html", "13 API Users’ Guide 13.1 ACCEPT API 13.2 BODE API 13.3 EPIC API 13.4 FEV1 API 13.5 CVDAnderson API 13.6 CHDWilson API 13.7 CFMortality API 13.8 QRISK3 API 13.9 CODEXCOPD API 13.10 MMRCEA API 13.11 COVIDSEIR API (experimental)", " 13 API Users’ Guide 13.1 ACCEPT API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patients provided in the accept package: remotes::install_github (resplab/peermodels) library(peermodels) connect_to_model(&quot;accept&quot;, api_key = YOUR_API_KEY) input &lt;- get_default_input() results &lt;- model_run(input) Cloud Access through Python import json import requests url = &#39;https://prism.peermodelsnetwork.com/route/accept/run&#39; headers = {&#39;x-prism-auth-user&#39;: YOUR_API_KEY} model_run = requests.post(url, headers=headers, json = {&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;ID&quot;: &quot;10001&quot;,&quot;male&quot;: 1,&quot;age&quot;: 57,&quot;smoker&quot;: 0,&quot;oxygen&quot;: 0,&quot;statin&quot;: 0,&quot;LAMA&quot;: 1,&quot;LABA&quot;: 1,&quot;ICS&quot;: 1,&quot;FEV1&quot;: 51,&quot;BMI&quot;: 18,&quot;SGRQ&quot;: 63,&quot;LastYrExacCount&quot;: 2,&quot;LastYrSevExacCount&quot;: 1,&quot;randomized_azithromycin&quot;: 0,&quot;randomized_statin&quot;: 0,&quot;randomized_LAMA&quot;: 0,&quot;randomized_LABA&quot;: 0,&quot;randomized_ICS&quot;: 0, &quot;random_sampling_N&quot; : 1000, &quot;random_distribution_iteration&quot; : 20000, &quot;calculate_CIs&quot; : &quot;TRUE&quot;}]}) print(model_run) results = json.loads(model_run.text) print(results) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;ID&quot;: &quot;10001&quot;,&quot;male&quot;: 1,&quot;age&quot;: 57,&quot;smoker&quot;: 0,&quot;oxygen&quot;: 0,&quot;statin&quot;: 0,&quot;LAMA&quot;: 1,&quot;LABA&quot;: 1,&quot;ICS&quot;: 1,&quot;FEV1&quot;: 51,&quot;BMI&quot;: 18,&quot;SGRQ&quot;: 63,&quot;LastYrExacCount&quot;: 2,&quot;LastYrSevExacCount&quot;: 1,&quot;randomized_azithromycin&quot;: 0,&quot;randomized_statin&quot;: 0,&quot;randomized_LAMA&quot;: 0,&quot;randomized_LABA&quot;: 0,&quot;randomized_ICS&quot;: 0, &quot;random_sampling_N&quot; : 1000, &quot;random_distribution_iteration&quot; : 20000, &quot;calculate_CIs&quot; : &quot;TRUE&quot;}]}&#39; \\ https://prism.peermodelsnetwork.com/route/accept/run 13.2 BODE API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the bode package: remotes::install_github (resplab/peermodels) library(peermodels) connect_to_model(&quot;bode&quot;, api_key = YOUR_API_KEY) input &lt;- get_default_input() results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;FEV1&quot;: 40,&quot;mMRC&quot;: 3,&quot;BMI&quot;: 22,&quot;walk&quot;: 100}]}&#39; \\ https://prism.peermodelsnetwork.com/route/bode/run 13.3 EPIC API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the epicR package: remotes::install_github (resplab/peermodels) library(peermodels) connect_to_model(&quot;epic&quot;, api_key = YOUR_API_KEY) input &lt;- get_default_input() results &lt;- model_run(input) 13.4 FEV1 API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the fev1 package: remotes::install_github (resplab/peermodels) library(peermodels) connect_to_model(&quot;fev1&quot;, api_key = YOUR_API_KEY) input &lt;- get_default_input() results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;male&quot;:1,&quot;age&quot;:70,&quot;smoker&quot;:1,&quot;FEV1&quot;:2.5,&quot;height&quot;:1.68,&quot;weight&quot;:65}]}&#39; \\ https://prism.peermodelsnetwork.com/route/fev1/run 13.5 CVDAnderson API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the cvdanderson package: remotes::install_github (resplab/peermodels) library(peermodels) connect_to_model(&quot;cvdanderson&quot;, api_key = YOUR_API_KEY) input &lt;- get_default_input() results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;age&quot;: 33,&quot;gender&quot;: 1,&quot;Tchol&quot;: 230,&quot;ECG_LVH&quot;: 0,&quot;HDLchol&quot;: 48, &quot;SBP&quot;: 135, &quot;DBP&quot;: 88, &quot;diabetes&quot;: 1, &quot;smoker&quot;: 1, &quot;t&quot;: 10}]}&#39; \\ https://prism.peermodelsnetwork.com/route/cvdanderson/run 13.6 CHDWilson API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the chdwilson package: remotes::install_github (resplab/peermodels) library(peermodels) connect_to_model(&quot;chdwilson&quot;, api_key = YOUR_API_KEY) input &lt;- get_default_input() results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;age&quot;: 55,&quot;gender&quot;: 1,&quot;TChol&quot;: 250,&quot;LDL&quot;: 120,&quot;HDL&quot;: 39, &quot;SBP&quot;: 146, &quot;DBP&quot;: 88, &quot;diabetes&quot;: 0, &quot;smoker&quot;: 1}]}&#39; \\ https://prism.peermodelsnetwork.com/route/chdwilson/run 13.7 CFMortality API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the chdwilson package: remotes::install_github (resplab/peermodels) library(peermodels) connect_to_model(&quot;cfmortality&quot;, api_key = YOUR_API_KEY) input &lt;- get_default_input() results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;male&quot;: 0,&quot;age&quot;: 57,&quot;fvc&quot;: 66.7,&quot;fev1&quot;: 47.4,&quot;fev1LastYear&quot;: 80.5,&quot;bcepacia&quot;: 0,&quot;underweight&quot;: 0,&quot;nHosp&quot;: 0,&quot;pancreaticInsufficient&quot;: 1,&quot;CFRelatedDiabetes&quot;: 0,&quot;ageAtDiagnosis&quot;: 0.9}]}&#39; \\ https://prism.peermodelsnetwork.com/route/cfmortality/run 13.8 QRISK3 API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the QRISK3 package: remotes::install_github (resplab/peermodels) library(peermodels) connect_to_model(&quot;qrisk3&quot;, api_key = YOUR_API_KEY) input &lt;- get_default_input() results &lt;- model_run(input) 13.9 CODEXCOPD API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the codexcopd package: remotes::install_github (resplab/peermodels) library(peermodels) connect_to_model(&quot;codexcopd&quot;, api_key = YOUR_API_KEY) input &lt;- get_default_input() results &lt;- model_run(input) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: REPLACE_WITH_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:[{&quot;age&quot;:40,&quot;charlson&quot;:8,&quot;FEV1&quot;:40,&quot;mMRC&quot;:3,&quot;exacerbation&quot;:2}]}&#39; \\ https://prism.peermodelsnetwork.com/route/codexcopd/run 13.10 MMRCEA API Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example inputs provided by the modelling team: library(peermodels) connect_to_model(&quot;mmrcea&quot;, api_key = YOUR_API_KEY) input &lt;- get_default_input() input$timeHorizon &lt;- 5 input$discountRate &lt;- 0.015 input$averageFamilyReferred &lt;- 2 input$familyReferredHCP &lt;- 1 input$adherenceIntensiveScreening &lt;- 0.9 input$crcmmrDefReferredHCPIntArm &lt;- 0.3 input$crcmmrDefReferredHCPmmrbrafCompArmVCHA &lt;- 0.3 input$crcmmrDefReferredHCPmmrCompArmVCHA &lt;- 0.08 input$crcmmrDefReferredHCPmmrbrafCompArmVIHA &lt;- 0.08 input$crcmmrDefReferredHCPmmrCompArmOtherHA &lt;- 0.08 input$ecmmrDefReferredHCPIntArm &lt;- 0.8 model_run(input) 13.11 COVIDSEIR API (experimental) We have recently deployed the Bayesian SEIR model to estimate physical-distancing effects developed by Anderson et al to our cloud infrastructure. The current version of the R package deployed to the PRISM server is covidseir v0.0.0.9006. The current implementation of the covidseir package is experimental and has some limitations, given the computational intensity of the model. Depending on the number of chains and iterations, the html connection might be dropped for calls that more than a dozen minutes. Currently, fitting the model with default parameters takes about 5 minutes. We are actively working to implement asynchronous support which would email the results back to the user when hours long model runs are requested. Cloud Access through R Users can access models on the Peer Models Network using the peermodels R package, available on GitHub. The following code snippet illustrates how you can run the model for example patient provided in the covidseir package: library(peermodels) connect_to_model(&quot;covidseir&quot;, api_key = YOUR_API_KEY, bypass_router = T) input &lt;- get_default_input() names(input) input$daily_cases results &lt;- model_run(input) names(results) draw_plots() The same workflow can be used to fit and run the model based on custom data. For example, the code snippet below, automatically downloads latest COVID-19 case numbers for British Columbia, and reruns the simulation using different assumptions. library(stringr) library(dplyr) library(tidyr) library(readr) library(lubridate) library(peermodels) url &lt;- &quot;https://docs.google.com/spreadsheets/d/1ad7-09_Jn6AxsdkVPE33T-iLfGpPRmd3piXQqFiVeas/export?&amp;format=csv&quot; CanadaCases &lt;- read_csv(url) covidCases &lt;- CanadaCases %&gt;% rename (name = &quot;prname&quot;) %&gt;% rename (Cases = &quot;numconf&quot;) %&gt;% mutate(date=dmy(date)) %&gt;% filter (name!=&quot;Canada&quot;) %&gt;% filter (date!=today()) bcCases &lt;- covidCases %&gt;% filter (name == &quot;British Columbia&quot;) connect_to_model(&quot;covidseir&quot;, api_key = &quot;YDbxcnNHmf4XoteSmCFHKx&quot;, bypass_router = T) input &lt;- get_default_input() first &lt;- length(bcCases$numtoday)-42+1 last &lt;- length(bcCases$numtoday) input$daily_cases &lt;- bcCases$numtoday[first:last] # Example assumed sampling fractions of positive cases: s1 &lt;- c(rep(0.1, 13), rep(0.2, length(input$daily_cases) - 13)) samp_frac_seg &lt;- c(rep(1, 13), rep(2, length(input$daily_cases) - 13)) s2 &lt;- rep(0.07, length(input$daily_cases)) # Assuming 7\\% of positive individuals are hospitalized input$samp_frac_fixed &lt;- rep(0.1, length(input$daily_cases)) input$fit_iter &lt;- 100 input$chains &lt;- 1 input$f_fixed &lt;- rep(0.1, 90) results &lt;- model_run(input) draw_plots() Cloud Access through Python Users can use Python to access covidseir model on the cloud. The simple code snippet below runs the model with default inputs. import json import requests url = &#39;http://model-covidseir.cp.prism-ubc.linaralabs.com/ocpu/library/covidseirPrism/R/gateway/json&#39; headers = {&#39;x-prism-auth-user&#39;: &#39;YOUR_API_KEY&#39;} default_input = requests.post(url, headers=headers,json = {&quot;func&quot;:[&quot;get_default_input&quot;]}) # json_default_input = json.loads(default_input.json()[0]) # OR: json_default_input = json.loads(json.loads(default_input.text)[0]) response = requests.post(url, headers=headers,json = {&quot;func&quot;:[&quot;prism_model_run&quot;], &quot;model_input&quot;:json_default_input}) results = json.loads(response.text) Cloud Access through Linux Bash In Ubuntu, you can call the API with curl: curl \\ -X POST \\ -H &quot;x-prism-auth-user: YOUR_API_KEY&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &#39;{&quot;func&quot;:[&quot;prism_model_run&quot;],&quot;model_input&quot;:{&quot;daily_cases&quot;:[0,0,1,3,1,8,0,6,5,0,7,7,18,9,22,38,53,45,40,77,76,48,67,78,42,66,67,92,16,70,43,53,55,53,29,26,37,25,45,34,40,35],&quot;obs_model&quot;:[&quot;NB2&quot;,&quot;Poisson&quot;],&quot;fit_forecast_days&quot;:[0],&quot;time_increment&quot;:[0.25],&quot;samp_frac_fixed&quot;:[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2],&quot;samp_frac_type&quot;:[&quot;fixed&quot;,&quot;estimated&quot;,&quot;rw&quot;,&quot;segmented&quot;],&quot;samp_frac_seg&quot;:{},&quot;days_back&quot;:[45],&quot;R0_prior&quot;:[0.9555,0.2],&quot;phi_prior&quot;:[1],&quot;f_prior&quot;:[0.4,0.2],&quot;e_prior&quot;:[0.8,0.05],&quot;samp_frac_prior&quot;:[0.4,0.2],&quot;start_decline_prior&quot;:[2.7081,0.05],&quot;end_decline_prior&quot;:[3.091,0.05],&quot;f_ramp_rate&quot;:[0],&quot;rw_sigma&quot;:[0.1],&quot;seed&quot;:[42],&quot;chains&quot;:[1],&quot;fit_iter&quot;:[100],&quot;N_pop&quot;:[5100000],&quot;pars&quot;:{&quot;D&quot;:[5],&quot;k1&quot;:[0.2],&quot;k2&quot;:[1],&quot;q&quot;:[0.05],&quot;ud&quot;:[0.1],&quot;ur&quot;:[0.02],&quot;f0&quot;:[1]},&quot;i0_prior&quot;:[2.0794,1],&quot;state_0&quot;:{&quot;E1_frac&quot;:[0.4],&quot;E2_frac&quot;:[0.1],&quot;I_frac&quot;:[0.5],&quot;Q_num&quot;:[0],&quot;R_num&quot;:[0],&quot;E1d_frac&quot;:[0.4],&quot;E2d_frac&quot;:[0.1],&quot;Id_frac&quot;:[0.5],&quot;Qd_num&quot;:[0],&quot;Rd_num&quot;:[0]},&quot;save_state_predictions&quot;:[false],&quot;delay_scale&quot;:[9.85],&quot;delay_shape&quot;:[1.73],&quot;ode_control&quot;:[1e-07,1e-06,1000000],&quot;project_forecast_days&quot;:[100],&quot;f_fixed_start&quot;:[53],&quot;f_fixed&quot;:[0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2],&quot;forecast_iter&quot;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],&quot;return_states&quot;:[false],&quot;imported_cases&quot;:[0],&quot;imported_window&quot;:[1],&quot;f_seg&quot;:[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]} } &#39; \\ http://model-covidseir.cp.prism-ubc.linaralabs.com/ocpu/library/covidseirPrism/R/gateway/json "]
]
